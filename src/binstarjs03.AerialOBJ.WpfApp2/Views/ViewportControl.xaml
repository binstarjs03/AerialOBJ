<UserControl x:Class="binstarjs03.AerialOBJ.WpfApp.Views.ViewportControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:components="clr-namespace:binstarjs03.AerialOBJ.WpfApp.Components"
             xmlns:viewmodels="clr-namespace:binstarjs03.AerialOBJ.MvvmAppCore.ViewModels;assembly=binstarjs03.AerialOBJ.MvvmAppCore"
             xmlns:local="clr-namespace:binstarjs03.AerialOBJ.WpfApp.Views"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type={x:Type viewmodels:ViewportViewModel}}"
             d:DesignWidth="500"
             d:DesignHeight="550"
             Background="{StaticResource Background}"
             ClipToBounds="True">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="SizeChanged">
            <i:InvokeCommandAction Command="{Binding ScreenSizeChangedCommand}"
                                   PassEventArgsToCommand="True"
                                   EventArgsConverter="{StaticResource SizeChangedEventArgsToSizeInt}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseMove">
            <i:InvokeCommandAction Command="{Binding Mouse.MouseMoveCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseWheel">
            <i:InvokeCommandAction Command="{Binding Mouse.MouseWheelCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseUp">
            <i:InvokeCommandAction Command="{Binding Mouse.MouseUpCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseDown">
            <i:InvokeCommandAction Command="{Binding Mouse.MouseDownCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseEnter">
            <i:InvokeCommandAction Command="{Binding Mouse.MouseEnterCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseLeave">
            <i:InvokeCommandAction Command="{Binding Mouse.MouseLeaveCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.Resources>
            <Style TargetType="components:PropertyValuePair">
                <Setter Property="PropertyColor" Value="{StaticResource TextNormal}"/>
                <Setter Property="ValueColor" Value="{StaticResource TextHighlighted}"/>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource TextNormal}"/>
            </Style>
        </Grid.Resources>
        <local:ViewportRegionImagePresenter local:ViewportInfo.CameraPos="{Binding CameraPos}"
                                            local:ViewportInfo.ScreenSize="{Binding ScreenSize}"
                                            local:ViewportInfo.ZoomMultiplier="{Binding ZoomMultiplier}"
                                            RegionDataImageModelSource="{Binding RegionDataImageModels}"/>
        <local:ViewportGridDrawer local:ViewportInfo.CameraPos="{Binding CameraPos}"
                                  local:ViewportInfo.ScreenSize="{Binding ScreenSize}"
                                  local:ViewportInfo.ZoomMultiplier="{Binding ZoomMultiplier}"/>
        <local:ViewportInfoControl HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   Margin="10"
                                   Visibility="{Binding IsInfoPanelVisible}"/>
    </Grid>
</UserControl>
