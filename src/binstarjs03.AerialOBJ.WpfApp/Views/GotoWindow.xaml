<Window x:Class="binstarjs03.AerialOBJ.WpfApp.Views.GotoWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:components="clr-namespace:binstarjs03.AerialOBJ.WpfApp.Components"
        xmlns:viewmodels="clr-namespace:binstarjs03.AerialOBJ.MvvmAppCore.ViewModels;assembly=binstarjs03.AerialOBJ.MvvmAppCore"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type={x:Type viewmodels:GotoViewModel}}"
        WindowStartupLocation="CenterOwner"
        Title="Goto"
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize"
        Background="{StaticResource Background}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Activated">
            <i:InvokeCommandAction Command="{Binding ActivatedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding DeactivatedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Margin="10">
        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource TextNormal}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="3,0"/>
            </Style>
            <Style TargetType="TextBlock"
                   x:Key="Right"
                   BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="HorizontalAlignment" Value="Right"/>
            </Style>
            <Style TargetType="components:IntBox">
                <Setter Property="Foreground" Value="{StaticResource TextNormal}"/>
                <Setter Property="Margin" Value="3,3"/>
            </Style>
            <Style TargetType="Button">
                <Setter Property="Margin" Value="5,5"/>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="0"
                   Foreground="{StaticResource TextNormal}"
                   TextWrapping="Wrap">
            Write the absolute coordinates you want to jump to:
        </TextBlock>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0"
                       Grid.Column="1"
                       Text="X"/>
            <TextBlock Grid.Row="0"
                       Grid.Column="2"
                       Text="Y"/>
            <TextBlock Grid.Row="0"
                       Grid.Column="3"
                       Text="Z"/>

            <TextBlock Grid.Row="1"
                       Grid.Column="0"
                       Text="Block"
                       Style="{StaticResource Right}"/>
            <components:IntBox Grid.Row="1"
                               Grid.Column="1"
                               IntValue="{Binding BlockCoordsX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <components:IntBox Grid.Row="1"
                               Grid.Column="2"
                               IntValue="{Binding BlockCoordsY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <components:IntBox Grid.Row="1"
                               Grid.Column="3"
                               IntValue="{Binding BlockCoordsZ, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <TextBlock Grid.Row="2"
                       Grid.Column="0"
                       Text="Chunk"
                       Style="{StaticResource Right}"/>
            <components:IntBox Grid.Row="2"
                               Grid.Column="1"
                               IntValue="{Binding ChunkCoordsX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <components:IntBox Grid.Row="2"
                               Grid.Column="2"
                               IntValue="{Binding ChunkCoordsY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <components:IntBox Grid.Row="2"
                               Grid.Column="3"
                               IntValue="{Binding ChunkCoordsZ, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <TextBlock Grid.Row="3"
                       Grid.Column="0"
                       Text="Region"
                       Style="{StaticResource Right}"/>
            <components:IntBox Grid.Row="3"
                               Grid.Column="1"
                               IntValue="{Binding RegionCoordsX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <components:IntBox Grid.Row="3"
                               Grid.Column="3"
                               IntValue="{Binding RegionCoordsZ, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <!--Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="Current Position"/>
            <Button Grid.Column="1" Content="Jump"/>
        </Grid-->
    </Grid>
</Window>
