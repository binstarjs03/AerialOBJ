<UserControl x:Class="binstarjs03.AerialOBJ.WpfApp.Views.ViewportControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:components="clr-namespace:binstarjs03.AerialOBJ.WpfApp.Components"
             xmlns:viewmodels="clr-namespace:binstarjs03.AerialOBJ.MvvmAppCore.ViewModels;assembly=binstarjs03.AerialOBJ.MvvmAppCore"
             xmlns:local="clr-namespace:binstarjs03.AerialOBJ.WpfApp.Views"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type={x:Type viewmodels:ViewportViewModel}}"
             d:DesignWidth="500"
             d:DesignHeight="550"
             Background="{StaticResource Background}"
             ClipToBounds="True">
    <UserControl.Resources>
        <Style x:Key="GridStyle1" TargetType="{x:Type Grid}"/>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="SizeChanged">
            <i:InvokeCommandAction Command="{Binding ScreenSizeChangedCommand}"
                                   PassEventArgsToCommand="True"
                                   EventArgsConverter="{StaticResource SizeChangedEventArgsToSizeInt}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseMove">
            <i:InvokeCommandAction Command="{Binding Mouse.MouseMoveCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseWheel">
            <i:InvokeCommandAction Command="{Binding Mouse.MouseWheelCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseUp">
            <i:InvokeCommandAction Command="{Binding Mouse.MouseUpCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseDown">
            <i:InvokeCommandAction Command="{Binding Mouse.MouseDownCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseEnter">
            <i:InvokeCommandAction Command="{Binding Mouse.MouseEnterCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseLeave">
            <i:InvokeCommandAction Command="{Binding Mouse.MouseLeaveCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <local:ViewportRegionImagePresenter/>
        <local:ViewportGridDrawer/>
        <local:ViewportCoordinatePresenter/>
        <!--  Camera Position Guide (Center Dot)  -->
        <Grid Visibility="{Binding IsCameraPositionVisible, Converter={StaticResource FlexibleBoolToVisibility}, ConverterParameter=Visible|Collapsed}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="2"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="2"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Rectangle Grid.Column="1"
                           Grid.RowSpan="3"
                           Fill="DimGray"
                           Height="15"/>
                <Rectangle Grid.Row="1"
                           Grid.ColumnSpan="3"
                           Fill="DimGray"
                           Width="15"/>
            </Grid>
            <Ellipse Width="3"
                     Height="3"
                     Fill="White"/>
        </Grid>
        <local:ViewportInfoControl HorizontalAlignment="Left"
                                   VerticalAlignment="Top"
                                   Margin="10"/>
    </Grid>
</UserControl>
