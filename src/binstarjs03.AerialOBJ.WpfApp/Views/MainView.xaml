<Window x:Class="binstarjs03.AerialOBJ.WpfApp.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:reusables="clr-namespace:binstarjs03.AerialOBJ.WpfApp.Views.ReusableControls"
        xmlns:viewmodels="clr-namespace:binstarjs03.AerialOBJ.WpfApp.ViewModels"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type={x:Type viewmodels:IMainViewModel}}"
        x:Name="Root"
        Title="{Binding Title}"
        d:Title="AerialOBJ"
        Width="800"
        Height="600"
        MinWidth="450"
        MinHeight="400"
        WindowStartupLocation="CenterScreen">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding ElementName=Viewport, Path=Content.DataContext.InputHandler.KeyHandler.KeyDownCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <DockPanel>
        <StackPanel DockPanel.Dock="Top">
            <Menu x:Name="MainMenu" IsMainMenu="True">
                <MenuItem Header="File">
                    <MenuItem Header="Open..." Command="{Binding OpenSavegameCommand}"/>
                    <MenuItem Header="Close"
                              Command="{Binding CloseSavegameCommand}"
                              IsEnabled="{Binding GlobalState.HasSavegameLoaded}"/>
                    <MenuItem Header="Exit"
                              Command="{Binding CloseCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"/>
                </MenuItem>
                <MenuItem Header="View">
                    <MenuItem Header="Chunk Grid"
                              IsCheckable="True"
                              IsChecked="{Binding ElementName=Viewport, Path=Content.DataContext.IsChunkGridVisible, Mode=TwoWay}"
                              IsEnabled="{Binding GlobalState.HasSavegameLoaded}"/>
                    <Separator/>
                    <MenuItem Header="Viewport Info"
                              IsCheckable="True"
                              IsChecked="{Binding ElementName=Viewport, Path=Content.DataContext.IsInfoPanelVisible, Mode=TwoWay}"
                              IsEnabled="{Binding GlobalState.HasSavegameLoaded}"/>
                    <MenuItem Header="Debug Log"
                              IsCheckable="True"
                              IsChecked="{Binding ViewState.IsDebugLogViewVisible, Mode=TwoWay}"/>
                </MenuItem>
                <MenuItem Header="Help">
                    <MenuItem Header="Manage Definitions.." Command="{Binding ShowDefinitionManagerModalCommand}"/>
                    <MenuItem Header="Settings"/>
                    <MenuItem Header="About..." Command="{Binding ShowAboutModalCommand}"/>
                </MenuItem>
            </Menu>
            <Rectangle Height="1" Fill="LightGray"/>
            <Grid Background="{Binding ElementName=MainMenu, Path=Background}" IsEnabled="{Binding GlobalState.HasSavegameLoaded}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0"
                            Margin="10,5"
                            Orientation="Vertical"
                            HorizontalAlignment="Center">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Text="Height"/>
                    <TextBlock Text="{Binding ElementName=HeightSlider, Path=Value}"/>
                </StackPanel>
                <Slider x:Name="HeightSlider"
                        Focusable="False"
                        Grid.Column="1"
                        Margin="0,0,10,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        SmallChange="1"
                        IsSnapToTickEnabled="True"
                        Value="{Binding ElementName=Viewport, Path=Content.DataContext.HeightLevel}"
                        Minimum="{Binding ElementName=Viewport, Path=Content.DataContext.LowHeightLimit}"
                        Maximum="{Binding ElementName=Viewport, Path=Content.DataContext.HighHeightLimit}"/>
            </Grid>
        </StackPanel>

        <Grid DockPanel.Dock="Bottom">
            <StatusBar d:Visibility="Collapsed" Visibility="{Binding GlobalState.HasSavegameLoaded, Converter={StaticResource FlexibleBoolToVisibility}, ConverterParameter=Visible|Collapsed}">
                <StatusBar.Resources>
                    <Style TargetType="reusables:PropertyValuePairView">
                        <Setter Property="PropertyColor" Value="Black"/>
                        <Setter Property="ValueColor" Value="DarkBlue"/>
                    </Style>
                </StatusBar.Resources>

                <reusables:PropertyValuePairView PropertyText="X: " ValueText="{Binding ElementName=Viewport, Path=Content.DataContext.ContextBlockCoords.X}"/>
                <reusables:PropertyValuePairView PropertyText="Y: " ValueText="{Binding ElementName=Viewport, Path=Content.DataContext.ContextBlockCoords.Y}"/>
                <reusables:PropertyValuePairView PropertyText="Z: " ValueText="{Binding ElementName=Viewport, Path=Content.DataContext.ContextBlockCoords.Z}"/>

                <Separator/>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding ElementName=Viewport, Path=Content.DataContext.ContextBlockDisplayName}"/>
                    <TextBlock Text=" - "/>
                    <TextBlock Text="{Binding ElementName=Viewport, Path=Content.DataContext.ContextBlockName}"/>
                </StackPanel>

                <Separator/>

                <reusables:PropertyValuePairView PropertyText="Region " ValueText="{Binding ElementName=Viewport, Path=Content.DataContext.ContextRegionCoords}"/>
                <reusables:PropertyValuePairView PropertyText="Chunk " ValueText="{Binding ElementName=Viewport, Path=Content.DataContext.ContextChunkCoords}"/>
            </StatusBar>
            <StatusBar Visibility="{Binding GlobalState.HasSavegameLoaded, Converter={StaticResource FlexibleBoolToVisibility}, ConverterParameter=Collapsed|Visible}">
                <StatusBarItem Content="Ready"/>
            </StatusBar>
        </Grid>

        <Border BorderThickness="0,1" BorderBrush="LightGray">
            <ContentControl x:Name="Viewport"
                            Focusable="False"
                            Content="{Binding ViewportView}"
                            d:Background="{StaticResource Background}"
                            IsEnabled="{Binding GlobalState.HasSavegameLoaded}"/>
        </Border>

    </DockPanel>
</Window>
