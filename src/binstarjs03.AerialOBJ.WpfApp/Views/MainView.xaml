<Window x:Class="binstarjs03.AerialOBJ.WpfApp.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:binstarjs03.AerialOBJ.WpfApp.Views"
        xmlns:reusables="clr-namespace:binstarjs03.AerialOBJ.WpfApp.Views.ReusableControls"
        xmlns:viewmodels="clr-namespace:binstarjs03.AerialOBJ.WpfApp.ViewModels" 
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type={x:Type viewmodels:MainViewModel}}"
        x:Name="Root"
        Title="{Binding Title}"
        d:Title="AerialOBJ"
        Width="800" Height="600"
        MinWidth="450" MinHeight="400">
    <!--Control name is required for code-behind-->
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding CloseCommand}"
                                   CommandParameter="{x:Static viewmodels:CloseViewSender.WindowCloseButton}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="1"/>
            <RowDefinition/>
            <RowDefinition Height="1"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" 
              IsMainMenu="True" 
              x:Name="MainMenu"
              DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Open..."
                          Command="{Binding OpenSavegameCommand}"/>
                <MenuItem Header="Close"
                          Command="{Binding CloseSavegameCommand}"
                          CommandParameter="{x:Static viewmodels:CloseSavegameSender.MenuCloseButton}"
                          IsEnabled="{Binding GlobalState.HasSavegameLoaded}"/>
                <MenuItem Header="Setting"/>
                <MenuItem Header="Manage Definitions.."
                          Command="{Binding ShowDefinitionManagerModalCommand}"/>
                <MenuItem Header="Exit"
                          Command="{Binding CloseCommand}"
                          CommandParameter="{x:Static viewmodels:CloseViewSender.MenuExitButton}"/>
            </MenuItem>
            <MenuItem Header="View">
                <MenuItem Header="Chunk Grid"
                          IsCheckable="True"
                          IsChecked="{Binding ElementName=Viewport, Path=Content.DataContext.IsChunkGridVisible, Mode=TwoWay}"
                          IsEnabled="{Binding GlobalState.HasSavegameLoaded}"/>
                <Separator/>
                <MenuItem Header="Viewport Info"
                          IsCheckable="True"
                          IsChecked="{Binding ElementName=Viewport, Path=Content.DataContext.IsInfoPanelVisible, Mode=TwoWay}"
                          IsEnabled="{Binding GlobalState.HasSavegameLoaded}"/>
                <MenuItem Header="Debug Log" 
                          IsCheckable="True"
                          IsChecked="{Binding ViewState.IsDebugLogWindowVisible, Mode=TwoWay}"/>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About..."
                          Command="{Binding ShowAboutModalCommand}"/>
            </MenuItem>
        </Menu>
        <Rectangle Grid.Row="1" Height="1" Fill="LightGray" DockPanel.Dock="top"/>
        <Grid Grid.Row="2" 
              Background="{Binding ElementName=MainMenu, Path=Background}"
              IsEnabled="{Binding GlobalState.HasSavegameLoaded}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" 
                        Margin="10,5"
                        Orientation="Vertical"
                        HorizontalAlignment="Center">
                <StackPanel.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                    </Style>
                </StackPanel.Resources>
                <TextBlock Text="Height"/>
                <TextBlock Text="{Binding ElementName=Viewport, Path=Content.DataContext.HeightLevel}"/>
            </StackPanel>
            <Slider Grid.Column="1"
                    Margin="0,0,10,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Name="HeightSlider"
                    SmallChange="1" 
                    Value="{Binding ElementName=Viewport, Path=Content.DataContext.HeightLevel}"
                    IsSnapToTickEnabled="True" 
                    Minimum="{Binding ElementName=Viewport, Path=Content.DataContext.LowHeightLimit}"
                    Maximum="{Binding ElementName=Viewport, Path=Content.DataContext.HighHeightLimit}"/>
        </Grid>
        <Rectangle Grid.Row="3" Height="1" Fill="LightGray" DockPanel.Dock="top"/>
        <ContentControl Grid.Row="4" 
                        Content="{Binding ViewportView}" 
                        x:Name="Viewport"
                        d:Background="{StaticResource Background}"
                        IsEnabled="{Binding GlobalState.HasSavegameLoaded}"/>
        <Rectangle Grid.Row="5" Height="1" Fill="LightGray" DockPanel.Dock="top"/>
        <Grid Grid.Row="6">
            <StatusBar DockPanel.Dock="Bottom"
                   d:Visibility="Collapsed"
                   Visibility="{Binding GlobalState.HasSavegameLoaded, Converter={StaticResource FlexibleBoolToVisibility}, ConverterParameter=Visible|Collapsed}">
                <StatusBar.Resources>
                    <Style TargetType="reusables:PropertyValuePairView">
                        <Setter Property="PropertyColor" Value="Black"/>
                        <Setter Property="ValueColor" Value="DarkBlue"/>
                    </Style>
                </StatusBar.Resources>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding ElementName=Viewport, Path=Content.DataContext.MouseBlockDisplayName}"/>
                    <TextBlock Text=" - "/>
                    <TextBlock Text="{Binding ElementName=Viewport, Path=Content.DataContext.MouseBlockName}"/>
                </StackPanel>
                <Separator/>
                <reusables:PropertyValuePairView PropertyText="Region " ValueText="{Binding ElementName=Viewport, Path=Content.DataContext.MouseRegionCoords}"/>
                <reusables:PropertyValuePairView PropertyText="Chunk " ValueText="{Binding ElementName=Viewport, Path=Content.DataContext.MouseChunkCoords}"/>
                <reusables:PropertyValuePairView PropertyText="Block " ValueText="{Binding ElementName=Viewport, Path=Content.DataContext.MouseBlockCoords}"/>
            </StatusBar>
            <StatusBar DockPanel.Dock="Bottom"
                    Visibility="{Binding GlobalState.HasSavegameLoaded, Converter={StaticResource FlexibleBoolToVisibility}, ConverterParameter=Collapsed|Visible}">
                <StatusBarItem Content="Ready"/>
            </StatusBar>
        </Grid>
        
    </Grid>
</Window>
