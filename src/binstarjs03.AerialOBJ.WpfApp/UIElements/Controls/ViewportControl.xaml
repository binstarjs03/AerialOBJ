<!--
Copyright (c) 2022, Bintang Jakasurya
All rights reserved. 

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->
    
    
<UserControl x:Class="binstarjs03.AerialOBJ.WpfApp.UIElements.Controls.ViewportControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:binstarjs03.AerialOBJ.WpfApp.UIElements.Controls"
             xmlns:components="clr-namespace:binstarjs03.AerialOBJ.WpfApp.UIElements.Components"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=local:ViewportControlVM}"
             
             Background="White"
             d:DesignWidth="800" d:DesignHeight="650">
    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type ColumnDefinition}" x:Key="CollapsibleColumn">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=SidePanelVisible}" Value="False">
                        <DataTrigger.Setters>
                            <Setter Property="Width" Value="0"/>
                            <Setter Property="MaxWidth" Value="0"/>
                        </DataTrigger.Setters>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="3" Style="{StaticResource CollapsibleColumn}"/>
            <ColumnDefinition Width="230" Style="{StaticResource CollapsibleColumn}" Name="SidePanelColumn"/>
        </Grid.ColumnDefinitions>
        <Rectangle Grid.Column="1" Fill="#FFF0F0F0"/>
        <DockPanel Grid.Column="0">
            <Grid DockPanel.Dock="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" 
                            Margin="10,5"
                            Orientation="Vertical"
                            HorizontalAlignment="Center">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Text="Height"/>
                    <TextBlock Text="{Binding Path=HeightLimit}" d:Text="255"/>
                </StackPanel>
                <Slider Grid.Column="1"
                        Margin="0,0,10,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Name="HeightSlider"
                        SmallChange="1" 
                        Value="{Binding Path=HeightLimit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        d:Value="255"
                        IsSnapToTickEnabled="True" 
                        Minimum="-64"
                        Maximum="320"/>
            </Grid>
            <Grid>
                <Grid Name="ViewportPanel" 
                        Focusable="True"
                        Background="#FF333333"
                        RenderOptions.EdgeMode="Aliased"
                        RenderOptions.BitmapScalingMode="NearestNeighbor"
                        ClipToBounds="True">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseWheel">
                            <i:InvokeCommandAction Command="{Binding MouseWheelCommand}" 
                                                   PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseMove">
                            <i:InvokeCommandAction Command="{Binding MouseMoveCommand}"
                                                   PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseUp">
                            <i:InvokeCommandAction Command="{Binding MouseUpCommand}"
                                                   PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction Command="{Binding MouseDownCommand}"
                                                   PassEventArgsToCommand="True"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave">
                            <i:InvokeCommandAction Command="{Binding MouseLeaveCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseEnter">
                            <i:InvokeCommandAction Command="{Binding MouseEnterCommand}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="SizeChanged">
                            <i:InvokeCommandAction Command="{Binding SizeChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Canvas Name="ViewportCanvas"/>
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>

                        <Rectangle Grid.Column="1" Grid.RowSpan="3" Fill="DimGray"
                               Height="15"/>
                        <Rectangle Grid.Row="1" Grid.ColumnSpan="3" Fill="DimGray"
                               Width="15"/>
                    </Grid>
                </Grid>
            </Grid>
        </DockPanel>
        <ScrollViewer Grid.Column="2" 
                      Visibility="{Binding Path=SidePanelVisible,
                                           Mode=OneWay,
                                           Converter={StaticResource BoolToVisibility}}"
                      VerticalScrollBarVisibility="Auto" 
                      HorizontalScrollBarVisibility="Auto">
            <StackPanel MaxWidth="{Binding ElementName=SidePanelColumn, Path=Width.Value}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="KeyUp">
                        <i:InvokeCommandAction Command="{Binding KeyUpCommand}"
                                               PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <GroupBox Header="Viewport">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Camera Pos X"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Camera Pos Z"/>
                        <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
                            <TextBlock Text="Zoom Level: "/>
                            <TextBlock Text="{Binding Path=ZoomLevel}" d:Text="2"/>
                        </StackPanel>
                        <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal">
                            <TextBlock Text="Height: "/>
                            <TextBlock Text="{Binding Path=HeightLimit}" d:Text="255"/>
                        </StackPanel>
                        <components:DoubleBox Grid.Row="0" Grid.Column="1" DoubleValue="{Binding Path=CameraPosX, Mode=TwoWay}"/>
                        <components:DoubleBox Grid.Row="1" Grid.Column="1" DoubleValue="{Binding Path=CameraPosZ, Mode=TwoWay}"/>
                        <Slider Grid.Row="2" Grid.Column="1" 
                                SmallChange="1" 
                                Value="{Binding Path=ZoomLevel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                d:Value="2"
                                IsSnapToTickEnabled="True" 
                                TickPlacement="BottomRight"
                                Minimum="0"
                                Maximum="{Binding Path=MaximumZoomLevel, Mode=OneTime}"/>
                        <Slider Grid.Row="3" Grid.Column="1"
                                SmallChange="1" 
                                Value="{Binding Path=HeightLimit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                d:Value="255"
                                IsSnapToTickEnabled="True" 
                                Minimum="-64"
                                Maximum="320"/>
                    </Grid>
                </GroupBox>
                <GroupBox Header="Export Selection Area">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <components:XYZIntBox Grid.Column="0" Header="Export Area 1" 
                                              XValue="{Binding Path=ExportArea1X, Mode=TwoWay}"
                                              YValue="{Binding Path=ExportArea1Y, Mode=TwoWay}"
                                              ZValue="{Binding Path=ExportArea1Z, Mode=TwoWay}"/>
                        <components:XYZIntBox Grid.Column="1" Header="Export Area 2" 
                                              XValue="{Binding Path=ExportArea2X, Mode=TwoWay}"
                                              YValue="{Binding Path=ExportArea2Y, Mode=TwoWay}"
                                              ZValue="{Binding Path=ExportArea2Z, Mode=TwoWay}"/>
                    </Grid>
                </GroupBox>

                <StackPanel Visibility="{Binding Path=SidePanelDebugInfoVisible, 
                                                 Mode=OneWay,
                                                 Converter={StaticResource BoolToVisibility}}">
                    <GroupBox Header="Debug - Thread Responsivity">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Main/UI Thread Response Test: "/>
                                <TextBlock Text="{Binding Path=DebugMainThreadResposeTestRandomNumber, Mode=OneWay}"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    
                    <GroupBox Header="Debug - Viewport Info">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Origin Offset: "/>
                                <TextBlock Text="{Binding Path=ViewportItemOffsetStringized, Mode=OneWay}"/>
                            </StackPanel>
                            
                            <Separator/>
                            
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Pixel-Per-Block: "/>
                                <TextBlock Text="{Binding Path=PixelPerBlock, Mode=OneWay}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Pixel-Per-Chunk: "/>
                                <TextBlock Text="{Binding Path=PixelPerChunk, Mode=OneWay}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Pixel-Per-Region: "/>
                                <TextBlock Text="{Binding Path=PixelPerRegion, Mode=OneWay}"/>
                            </StackPanel>

                            <Separator/>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Mouse Pos: "/>
                                <TextBlock Text="{Binding Path=MousePos, Mode=OneWay}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Mouse Pos Delta: "/>
                                <TextBlock Text="{Binding Path=MousePosDelta, Mode=OneWay}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Mouse Is Clicking: "/>
                                <TextBlock Text="{Binding Path=MouseClickHolding, Mode=OneWay}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Mouse Is Outside: "/>
                                <TextBlock Text="{Binding Path=MouseIsOutside, Mode=OneWay}"/>
                            </StackPanel>


                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Debug - Chunk Region Manager Info">
                        <StackPanel>
                            <StackPanel Orientation="Vertical">
                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="Visible Chunk Range: "/>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="- X Range: "/>
                                        <TextBlock Text="{Binding Path=ChunkRegionManagerVisibleChunkRangeXStringized, Mode=OneWay}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="- Z Range: "/>
                                        <TextBlock Text="{Binding Path=ChunkRegionManagerVisibleChunkRangeZStringized, Mode=OneWay}"/>
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Visible Chunk Count: "/>
                                    <TextBlock Text="{Binding Path=ChunkRegionManagerVisibleChunkCount, Mode=OneWay}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Loaded Chunk Count: "/>
                                    <TextBlock Text="{Binding Path=ChunkRegionManagerLoadedChunkCount, Mode=OneWay}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Pending Chunk Count: "/>
                                    <TextBlock Text="{Binding Path=ChunkRegionManagerPendingChunkCount, Mode=OneWay}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Worked Chunk Count: "/>
                                    <TextBlock Text="{Binding Path=ChunkRegionManagerWorkedChunkCount, Mode=OneWay}"/>
                                </StackPanel>
                            </StackPanel>

                            <Separator/>

                            <StackPanel Orientation="Vertical">
                                <TextBlock Text="Visible Region Range: "/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="- X Range: "/>
                                    <TextBlock Text="{Binding Path=ChunkRegionManagerVisibleRegionRangeXStringized, Mode=OneWay}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="- Z Range: "/>
                                    <TextBlock Text="{Binding Path=ChunkRegionManagerVisibleRegionRangeZStringized, Mode=OneWay}"/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Visible Region Count: "/>
                                    <TextBlock Text="{Binding Path=ChunkRegionManagerVisibleRegionCount, Mode=OneWay}"/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Loaded Region Count: "/>
                                <TextBlock Text="{Binding Path=ChunkRegionManagerLoadedRegionCount, Mode=OneWay}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Pending Region Count: "/>
                                <TextBlock Text="{Binding Path=ChunkRegionManagerPendingRegionCount, Mode=OneWay}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Worked Region: "/>
                                <TextBlock Text="{Binding Path=ChunkRegionManagerWorkedRegion, Mode=OneWay}"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>

            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
